// DO NOT EDIT. This file is generated by Fresh.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import { type Manifest } from "$fresh/server.ts";

const manifest = {
  routes: {
    "./routes/_404.tsx": await import("./routes/_404.tsx"),
    "./routes/_app.tsx": await import("./routes/_app.tsx"),
    "./routes/active_nav/foo/bar.tsx": await import(
      "./routes/active_nav/foo/bar.tsx"
    ),
    "./routes/active_nav/foo/index.tsx": await import(
      "./routes/active_nav/foo/index.tsx"
    ),
    "./routes/active_nav/index.tsx": await import(
      "./routes/active_nav/index.tsx"
    ),
    "./routes/active_nav/island.tsx": await import(
      "./routes/active_nav/island.tsx"
    ),
    "./routes/active_nav_partial/_layout.tsx": await import(
      "./routes/active_nav_partial/_layout.tsx"
    ),
    "./routes/active_nav_partial/foo/bar.tsx": await import(
      "./routes/active_nav_partial/foo/bar.tsx"
    ),
    "./routes/active_nav_partial/foo/index.tsx": await import(
      "./routes/active_nav_partial/foo/index.tsx"
    ),
    "./routes/active_nav_partial/index.tsx": await import(
      "./routes/active_nav_partial/index.tsx"
    ),
    "./routes/active_nav_partial/island.tsx": await import(
      "./routes/active_nav_partial/island.tsx"
    ),
    "./routes/button/index.tsx": await import("./routes/button/index.tsx"),
    "./routes/button/update.tsx": await import("./routes/button/update.tsx"),
    "./routes/client_nav/_layout.tsx": await import(
      "./routes/client_nav/_layout.tsx"
    ),
    "./routes/client_nav/index.tsx": await import(
      "./routes/client_nav/index.tsx"
    ),
    "./routes/client_nav/injected.tsx": await import(
      "./routes/client_nav/injected.tsx"
    ),
    "./routes/client_nav/page-a.tsx": await import(
      "./routes/client_nav/page-a.tsx"
    ),
    "./routes/client_nav/page-b.tsx": await import(
      "./routes/client_nav/page-b.tsx"
    ),
    "./routes/client_nav/page-c.tsx": await import(
      "./routes/client_nav/page-c.tsx"
    ),
    "./routes/client_nav_both/_layout.tsx": await import(
      "./routes/client_nav_both/_layout.tsx"
    ),
    "./routes/client_nav_both/index.tsx": await import(
      "./routes/client_nav_both/index.tsx"
    ),
    "./routes/client_nav_both/page-a.tsx": await import(
      "./routes/client_nav_both/page-a.tsx"
    ),
    "./routes/client_nav_both/page-b.tsx": await import(
      "./routes/client_nav_both/page-b.tsx"
    ),
    "./routes/client_nav_both/page-c.tsx": await import(
      "./routes/client_nav_both/page-c.tsx"
    ),
    "./routes/client_nav_opt_out/_layout.tsx": await import(
      "./routes/client_nav_opt_out/_layout.tsx"
    ),
    "./routes/client_nav_opt_out/index.tsx": await import(
      "./routes/client_nav_opt_out/index.tsx"
    ),
    "./routes/client_nav_opt_out/injected.tsx": await import(
      "./routes/client_nav_opt_out/injected.tsx"
    ),
    "./routes/client_nav_opt_out/page-a.tsx": await import(
      "./routes/client_nav_opt_out/page-a.tsx"
    ),
    "./routes/client_nav_opt_out/page-b.tsx": await import(
      "./routes/client_nav_opt_out/page-b.tsx"
    ),
    "./routes/client_nav_opt_out/page-c.tsx": await import(
      "./routes/client_nav_opt_out/page-c.tsx"
    ),
    "./routes/deep_partial/index.tsx": await import(
      "./routes/deep_partial/index.tsx"
    ),
    "./routes/deep_partial/injected.tsx": await import(
      "./routes/deep_partial/injected.tsx"
    ),
    "./routes/deep_partial/update.tsx": await import(
      "./routes/deep_partial/update.tsx"
    ),
    "./routes/duplicate_name/index.tsx": await import(
      "./routes/duplicate_name/index.tsx"
    ),
    "./routes/error_404.tsx": await import("./routes/error_404.tsx"),
    "./routes/form/index.tsx": await import("./routes/form/index.tsx"),
    "./routes/form/injected.tsx": await import("./routes/form/injected.tsx"),
    "./routes/form/update.tsx": await import("./routes/form/update.tsx"),
    "./routes/form_get/index.tsx": await import("./routes/form_get/index.tsx"),
    "./routes/form_post/index.tsx": await import(
      "./routes/form_post/index.tsx"
    ),
    "./routes/form_submitter/index.tsx": await import(
      "./routes/form_submitter/index.tsx"
    ),
    "./routes/form_submitter_partial/index.tsx": await import(
      "./routes/form_submitter_partial/index.tsx"
    ),
    "./routes/form_submitter_partial_no_client_nav/index.tsx": await import(
      "./routes/form_submitter_partial_no_client_nav/index.tsx"
    ),
    "./routes/fragment_nav.tsx": await import("./routes/fragment_nav.tsx"),
    "./routes/fragment_nav_scroll.tsx": await import(
      "./routes/fragment_nav_scroll.tsx"
    ),
    "./routes/head_merge/duplicate.tsx": await import(
      "./routes/head_merge/duplicate.tsx"
    ),
    "./routes/head_merge/index.tsx": await import(
      "./routes/head_merge/index.tsx"
    ),
    "./routes/head_merge/injected.tsx": await import(
      "./routes/head_merge/injected.tsx"
    ),
    "./routes/head_merge/update.tsx": await import(
      "./routes/head_merge/update.tsx"
    ),
    "./routes/head_merge/without_title.tsx": await import(
      "./routes/head_merge/without_title.tsx"
    ),
    "./routes/index.tsx": await import("./routes/index.tsx"),
    "./routes/isPartial/_middleware.ts": await import(
      "./routes/isPartial/_middleware.ts"
    ),
    "./routes/isPartial/async.tsx": await import(
      "./routes/isPartial/async.tsx"
    ),
    "./routes/isPartial/handler.tsx": await import(
      "./routes/isPartial/handler.tsx"
    ),
    "./routes/isPartial/index.tsx": await import(
      "./routes/isPartial/index.tsx"
    ),
    "./routes/isPartial/injected.tsx": await import(
      "./routes/isPartial/injected.tsx"
    ),
    "./routes/island_instance/index.tsx": await import(
      "./routes/island_instance/index.tsx"
    ),
    "./routes/island_instance/injected.tsx": await import(
      "./routes/island_instance/injected.tsx"
    ),
    "./routes/island_instance/partial.tsx": await import(
      "./routes/island_instance/partial.tsx"
    ),
    "./routes/island_instance/partial_remove.tsx": await import(
      "./routes/island_instance/partial_remove.tsx"
    ),
    "./routes/island_instance/partial_replace.tsx": await import(
      "./routes/island_instance/partial_replace.tsx"
    ),
    "./routes/island_instance_multiple/index.tsx": await import(
      "./routes/island_instance_multiple/index.tsx"
    ),
    "./routes/island_instance_multiple/injected.tsx": await import(
      "./routes/island_instance_multiple/injected.tsx"
    ),
    "./routes/island_instance_multiple/partial.tsx": await import(
      "./routes/island_instance_multiple/partial.tsx"
    ),
    "./routes/island_instance_multiple/partial_both.tsx": await import(
      "./routes/island_instance_multiple/partial_both.tsx"
    ),
    "./routes/island_instance_nested/index.tsx": await import(
      "./routes/island_instance_nested/index.tsx"
    ),
    "./routes/island_instance_nested/injected.tsx": await import(
      "./routes/island_instance_nested/injected.tsx"
    ),
    "./routes/island_instance_nested/partial.tsx": await import(
      "./routes/island_instance_nested/partial.tsx"
    ),
    "./routes/island_instance_nested/replace.tsx": await import(
      "./routes/island_instance_nested/replace.tsx"
    ),
    "./routes/island_props/index.tsx": await import(
      "./routes/island_props/index.tsx"
    ),
    "./routes/island_props/injected.tsx": await import(
      "./routes/island_props/injected.tsx"
    ),
    "./routes/island_props/partial.tsx": await import(
      "./routes/island_props/partial.tsx"
    ),
    "./routes/island_props_signals/index.tsx": await import(
      "./routes/island_props_signals/index.tsx"
    ),
    "./routes/island_props_signals/injected.tsx": await import(
      "./routes/island_props_signals/injected.tsx"
    ),
    "./routes/island_props_signals/partial.tsx": await import(
      "./routes/island_props_signals/partial.tsx"
    ),
    "./routes/keys/index.tsx": await import("./routes/keys/index.tsx"),
    "./routes/keys/injected.tsx": await import("./routes/keys/injected.tsx"),
    "./routes/keys/swap.tsx": await import("./routes/keys/swap.tsx"),
    "./routes/keys_components/index.tsx": await import(
      "./routes/keys_components/index.tsx"
    ),
    "./routes/keys_components/injected.tsx": await import(
      "./routes/keys_components/injected.tsx"
    ),
    "./routes/keys_components/swap.tsx": await import(
      "./routes/keys_components/swap.tsx"
    ),
    "./routes/keys_confusion/index.tsx": await import(
      "./routes/keys_confusion/index.tsx"
    ),
    "./routes/keys_dom/index.tsx": await import("./routes/keys_dom/index.tsx"),
    "./routes/keys_dom/injected.tsx": await import(
      "./routes/keys_dom/injected.tsx"
    ),
    "./routes/keys_dom/swap.tsx": await import("./routes/keys_dom/swap.tsx"),
    "./routes/keys_outside/index.tsx": await import(
      "./routes/keys_outside/index.tsx"
    ),
    "./routes/loading/index.tsx": await import("./routes/loading/index.tsx"),
    "./routes/loading/injected.tsx": await import(
      "./routes/loading/injected.tsx"
    ),
    "./routes/loading/update.tsx": await import("./routes/loading/update.tsx"),
    "./routes/missing_partial/index.tsx": await import(
      "./routes/missing_partial/index.tsx"
    ),
    "./routes/missing_partial/injected.tsx": await import(
      "./routes/missing_partial/injected.tsx"
    ),
    "./routes/missing_partial/update.tsx": await import(
      "./routes/missing_partial/update.tsx"
    ),
    "./routes/mode/append.tsx": await import("./routes/mode/append.tsx"),
    "./routes/mode/index.tsx": await import("./routes/mode/index.tsx"),
    "./routes/mode/injected.tsx": await import("./routes/mode/injected.tsx"),
    "./routes/mode/prepend.tsx": await import("./routes/mode/prepend.tsx"),
    "./routes/mode/replace.tsx": await import("./routes/mode/replace.tsx"),
    "./routes/nested/index.tsx": await import("./routes/nested/index.tsx"),
    "./routes/nested/inner.tsx": await import("./routes/nested/inner.tsx"),
    "./routes/nested/outer.tsx": await import("./routes/nested/outer.tsx"),
    "./routes/no_islands/index.tsx": await import(
      "./routes/no_islands/index.tsx"
    ),
    "./routes/no_islands/injected.tsx": await import(
      "./routes/no_islands/injected.tsx"
    ),
    "./routes/no_islands/update.tsx": await import(
      "./routes/no_islands/update.tsx"
    ),
    "./routes/no_partial_response/index.tsx": await import(
      "./routes/no_partial_response/index.tsx"
    ),
    "./routes/no_partial_response/injected.tsx": await import(
      "./routes/no_partial_response/injected.tsx"
    ),
    "./routes/no_partial_response/update.tsx": await import(
      "./routes/no_partial_response/update.tsx"
    ),
    "./routes/partial_slot_inside_island.tsx": await import(
      "./routes/partial_slot_inside_island.tsx"
    ),
    "./routes/redirected/handler.tsx": await import(
      "./routes/redirected/handler.tsx"
    ),
    "./routes/redirected/index.tsx": await import(
      "./routes/redirected/index.tsx"
    ),
    "./routes/redirected/injected.tsx": await import(
      "./routes/redirected/injected.tsx"
    ),
    "./routes/redirected/redirect.tsx": await import(
      "./routes/redirected/redirect.tsx"
    ),
    "./routes/relative_link/index.tsx": await import(
      "./routes/relative_link/index.tsx"
    ),
    "./routes/scroll_restoration/index.tsx": await import(
      "./routes/scroll_restoration/index.tsx"
    ),
    "./routes/scroll_restoration/injected.tsx": await import(
      "./routes/scroll_restoration/injected.tsx"
    ),
    "./routes/scroll_restoration/update.tsx": await import(
      "./routes/scroll_restoration/update.tsx"
    ),
    "./routes/spoof_state/index.tsx": await import(
      "./routes/spoof_state/index.tsx"
    ),
    "./routes/spoof_state/partial.tsx": await import(
      "./routes/spoof_state/partial.tsx"
    ),
  },
  islands: {
    "./islands/Counter.tsx": await import("./islands/Counter.tsx"),
    "./islands/CounterA.tsx": await import("./islands/CounterA.tsx"),
    "./islands/CounterB.tsx": await import("./islands/CounterB.tsx"),
    "./islands/DangerousIsland.tsx": await import(
      "./islands/DangerousIsland.tsx"
    ),
    "./islands/Fader.tsx": await import("./islands/Fader.tsx"),
    "./islands/InvalidSlot.tsx": await import("./islands/InvalidSlot.tsx"),
    "./islands/KeyExplorer.tsx": await import("./islands/KeyExplorer.tsx"),
    "./islands/LazyLink.tsx": await import("./islands/LazyLink.tsx"),
    "./islands/Logger.tsx": await import("./islands/Logger.tsx"),
    "./islands/Other.tsx": await import("./islands/Other.tsx"),
    "./islands/PartialTrigger.tsx": await import(
      "./islands/PartialTrigger.tsx"
    ),
    "./islands/PassThrough.tsx": await import("./islands/PassThrough.tsx"),
    "./islands/PropIsland.tsx": await import("./islands/PropIsland.tsx"),
    "./islands/SignalProp.tsx": await import("./islands/SignalProp.tsx"),
    "./islands/Spinner.tsx": await import("./islands/Spinner.tsx"),
    "./islands/Stateful.tsx": await import("./islands/Stateful.tsx"),
  },
  baseUrl: import.meta.url,
} satisfies Manifest;

export default manifest;
