// DO NOT EDIT. This file is generated by Fresh.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import { type Manifest } from "$fresh/server.ts";

const manifest = {
  routes: {
    "./routes/_app.tsx": await import("./routes/_app.tsx"),
    "./routes/_layout.tsx": await import("./routes/_layout.tsx"),
    "./routes/_middleware.ts": await import("./routes/_middleware.ts"),
    "./routes/async/_layout.tsx": await import("./routes/async/_layout.tsx"),
    "./routes/async/index.tsx": await import("./routes/async/index.tsx"),
    "./routes/async/redirect/_layout.tsx": await import(
      "./routes/async/redirect/_layout.tsx"
    ),
    "./routes/async/redirect/index.tsx": await import(
      "./routes/async/redirect/index.tsx"
    ),
    "./routes/async/sub/_layout.tsx": await import(
      "./routes/async/sub/_layout.tsx"
    ),
    "./routes/async/sub/index.tsx": await import(
      "./routes/async/sub/index.tsx"
    ),
    "./routes/dynamic/[tenant]/index.tsx": await import(
      "./routes/dynamic/[tenant]/index.tsx"
    ),
    "./routes/files/js/_layout.js": await import(
      "./routes/files/js/_layout.js"
    ),
    "./routes/files/js/index.js": await import("./routes/files/js/index.js"),
    "./routes/files/jsx/_layout.jsx": await import(
      "./routes/files/jsx/_layout.jsx"
    ),
    "./routes/files/jsx/index.jsx": await import(
      "./routes/files/jsx/index.jsx"
    ),
    "./routes/files/ts/_layout.ts": await import(
      "./routes/files/ts/_layout.ts"
    ),
    "./routes/files/ts/index.ts": await import("./routes/files/ts/index.ts"),
    "./routes/files/tsx/_layout.tsx": await import(
      "./routes/files/tsx/_layout.tsx"
    ),
    "./routes/files/tsx/index.tsx": await import(
      "./routes/files/tsx/index.tsx"
    ),
    "./routes/foo/_layout.tsx": await import("./routes/foo/_layout.tsx"),
    "./routes/foo/bar.tsx": await import("./routes/foo/bar.tsx"),
    "./routes/foo/index.tsx": await import("./routes/foo/index.tsx"),
    "./routes/index.tsx": await import("./routes/index.tsx"),
    "./routes/other.tsx": await import("./routes/other.tsx"),
    "./routes/override/_layout.tsx": await import(
      "./routes/override/_layout.tsx"
    ),
    "./routes/override/index.tsx": await import("./routes/override/index.tsx"),
    "./routes/override/layout_no_app/_layout.tsx": await import(
      "./routes/override/layout_no_app/_layout.tsx"
    ),
    "./routes/override/layout_no_app/index.tsx": await import(
      "./routes/override/layout_no_app/index.tsx"
    ),
    "./routes/override/no_app.tsx": await import(
      "./routes/override/no_app.tsx"
    ),
    "./routes/override/no_layout.tsx": await import(
      "./routes/override/no_layout.tsx"
    ),
    "./routes/override/no_layout_no_app.tsx": await import(
      "./routes/override/no_layout_no_app.tsx"
    ),
    "./routes/skip/sub/_layout.tsx": await import(
      "./routes/skip/sub/_layout.tsx"
    ),
    "./routes/skip/sub/index.tsx": await import("./routes/skip/sub/index.tsx"),
  },
  islands: {
    "./routes/dynamic/[tenant]/(_islands)/Counter.tsx": await import(
      "./routes/dynamic/[tenant]/(_islands)/Counter.tsx"
    ),
  },
  baseUrl: import.meta.url,
} satisfies Manifest;

export default manifest;
